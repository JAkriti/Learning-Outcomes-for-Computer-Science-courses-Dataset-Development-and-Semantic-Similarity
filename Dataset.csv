Harvard University,Massachusetts Institute of Technology,Yale University,University of Toronto,University of Illinois,Carnegie Mellon University,Georgia Institute of Technology,University of Cambridge,University of Oxford,University College London,EPFL,NTU,University of Waterloo,University of Hong Kong
A student will learn a broad and robust understanding of computer science and programming,A student will learn a language for expressing computations—Python,Students will learn to think more methodically.,A student will be comfortable with procedural programming in Python,A student will be able to solve problems algorithmically.,"A student will be able to Write clear, robust, and efficient code in Python using: sequential, conditional, and loop statements, strings, lists, tuples, sets, and dictionaries, objects and classes, recursive approaches and graphics and interaction
","A student will be able to write short programs (functions or scripts) (< 100 lines of code), using iteration, conditionals and simple sequential data structures (e.g. arrays, lists, strings)",The students will be familiar with several language paradigms and how they relate to different application domains;,The students will be able to define the semantics of a programming language using a definitional interpreter.,"A student will be able to design, implement, and debug small programs using two different programming paradigms, given straightforward specifications.",A student will be able to Design algorithms solving simple tasks,"A student will be able to Describe the internal operation of a basic processor, how a program is executed by a computer and computing trends.","A student will be able to Write efficient, readable programs from scratch in several new programming languages",A student will be Able to identify possible solutions for problems based on computer programs.
A student will learn how to think algorithmically and solve programming problems efficiently,A student will learn about the process of writing and debugging a program,Students will learn to program procedurally.,"A student will be exposed to software development topics like testing, design, and documentation.","A student will be proficient in “computational thinking”, meaning that students should be able to conduct major- appropriate abstraction, modeling, representations of information, and algorithmic thinking related to solving engineering problems.","A student will be able to develop programs to effectively solve medium-sized tasks by: employing modular, top-down design in program construction, demonstrating an effective programming style based on established standards, practices, and guidelines, proactively creating and writing test cases to test and debug code
, applying computational problem-solving skills to new problems, especially in the student's home academic discipline, explaining and analyzing the efficiency of algorithms, particularly by predicting the Big-O running time of small pieces of code",A student will be able to write programs that use dictionaries (hashtables),"The students will understand the design space of programming languages, including concepts and constructs from past languages as well as those that may be used in the future;",The students will be able to investigate semantic issues in programming languages by studying implementations in an interpreter,A student will be able to develop straightforward algorithms to solve a range of common programming problems.,A student will be able to Transcribe an algorithm into its equivalent program in Java,A student will be able to Analyse a problem then design and express its solution in such a way that a computer can effectively carry it out. (i.e. equip you with CT skills),A student will be able to Define and implement (via interpreters written in these new programming languages) operational semantics for extensions of the lambda calculus distilling features from said languages,A student will be Able to implement solutions for problems using Python
"A student will learn concepts like abstraction, algorithms, data structures, encapsulation, resource management, security, software engineering, and web development",A student will learn about the process of moving from a problem statement to a computational formulation of a method for solving the problem,Students will learn to represent and process information.,"A student will also be exposed to some core computer science ideas, such as complexity, abstraction, and the use of algorithms","A student will be confident about using computation as a standard tool, on the same level as math and physics.",A student will be able to design and write a substantial (500-1500 line) program in Python with minimal guidance,A student will be able to write recursive solutions to mathematically recursive problems and non-mathematical problems,The students will develop a critical understanding of the programming languages that we use by being able to identify and compare the same concept as it appears in different languages,The students will be able to solve problems using a range of programming paradigms and assess the effectiveness of each paradigm for a particular problem.,"A student will be able to compare and contrast the different paradigms, understanding the relative advantages and disadvantages of each.",A student will be able to  Model in Java language a simple situation of the real world,"A student will be able to Implement problem solutions as programs using basic control structures (sequence, conditional, iterative).",A student will be able to Define typing rules for these extensions compatible with the type systems provided by said languages and implement type checking and type inference algorithms based on these rules,A student will be Able to understand programs written by others and participate in larger scale system implementation.
"A student will be familiar with a number of languages, including C, Python, SQL, and JavaScript plus CSS and HTML",A student will learn a basic set of “recipes”—algorithms,Students will learn to communicate succinctly and precisely.,,"A student will be able to program in a high-level language (e.g., Python or MATLAB).",,A student will be able to use abstraction in problem solutions by writing programs that make calls to other user-defined functions,,,"A student will be able to use common programming tools such as compilers, editors and debuggers.",A student will be able to Structure a complex problem into sub-problems,A student will be able to Implement problem solutions as programs using basic data types and aggregate data types.,"A student will be able to State and prove relevant theorems (e.g., progress, preservation) about type systems",
A student will learn how to engage with a vibrant community of like-minded learners from all levels of experience,A student will learn how to use simulations to shed light on problems that don’t easily succumb to closed form solutions,Students will learn to solve problems efficiently.,,"A student will be able to access data sources, process data, and create outputs including various, plots.",,A student will be to work with strings,,,"A student will be able to gain a basic understanding of how programs use computer memory, memory management, and the binary representation of data values",A student will be able to Analyze a code to describe the result or correct it,A student will be able to Apply the CT concepts on case studies/problem‐based scenarios through hands‐on practice of the CT processes.,,
A student will learn how to develop and present a final programming project to your peers,A student will learn about how to use computational tools to help model and understand data,Students will recognise patterns among problems.,,A student will be able to use MATLAB proficiently.,,A student will be able to understand runtime user input versus parameters,,,,A student will be able to  Argue the validity of basic design decisions in an object-oriented program,,,
,,Students will decompose problems into parts and compute solutions thereto.,,,,A student will be able to understand function return versus print of results,,,,A student will be able to Test the adequacy of the result of a program in relation to the target task,,,
,,Students will learn to operate at multiple levels of abstraction.,,,,A student will be able to apply knowledge of primitive types such as the difference between integer and floating point for calculations,,,,A student will be able to Autonomously create a small application using the Java language and using the concepts fundamentals of object oriented programming,,,
,,Students will learn to separate design from implementation details.,,,,A student will be able to use incremental development and basic debugging techniques such as print statements in the detection of errors in debugging incorrect programs,,,,,,,
,,Students will learn to infer from first principles how systems work.,,,,A student will be able to track variable values by tracing execution of a program,,,,,,,
,,"Students will learn to assess the correctness, design and style of code.",,,,A student will be able to apply knowledge of basic complexity (Big – O) to calculate the runtime requirements given for common searching and sorting algorithms,,,,,,,
,,Students will learn to teach themselves new languages.,,,,A student will be able to use object-oriented programming through the use dot notation,,,,,,,
,,Students will learn to identify threats to privacy and security.,,,,"A student will be able to understand binary numbers in conjunction with Unicode and ASCII, RGB, etc. (Competency) Able to convert between binary and base 10",,,,,,,
,,"Students will learn to read documentation, drawing conclusions from specifications.",,,,"A student will be able to demonstrate basic competence in commonly used office productivity applications (e.g. word processing, presentation and spreadsheet software)",,,,,,,
,,"Students will learn to test solutions to problems, find faults, and identify corner cases.",,,,A student will be able to write functions that read data from the console (user) and display results to the console,,,,,,,
,,Students will learn to describe symptoms of problems precisely and ask questions clearly.,,,,A student will be able to write functions that read data from a file and write data to a file,,,,,,,
,,"Students will learn to identify and quantify tradeoffs among resources, particularly time and space.",,,,A student will be able to write functions that read data from a network connection (URL) to process information from a web page,,,,,,,
,,,,,,A student will be able to write functions that read and possibly manipulate files and folders by interacting with operating system commands,,,,,,,
,,,,,,"A student will be able to understand common searching (i.e. sequential/linear search, binary search) and sorting algorithms (i.e. selection sort, quick sort)",,,,,,,